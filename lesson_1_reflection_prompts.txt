How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could clearly see all the differences next to each other and see if it was a correct edit or an error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can can allways go back to the version before a bug is created and find it much faster. Compared to no version cotrolle at all where I need to go troug all the code to find the bug. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is made to programing and fro filen that are connecet while Goole Docs is made to store changes i seperate files lika a text or spreadsheet file.

How can you use the commands git log and git diff to view the history of files?

    By running the command "git log" I can see all the commits and there id. By using "git diff first_id second_id" I ca se the differensce in tehe two commits.

How might using version control make you more confident to make changes that
could break something?

 	I don't have to worry about ruin the project because I can always go back to an older commit to find bus or to restore the the older version.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to set up a enviroment to store all my projects to have a stable version controll function.
